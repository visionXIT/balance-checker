name: Build & Deploy app
on:
  workflow_dispatch:
    inputs:
     environment:
        type: environment
        description: Select the environment
  push:
    branches:
      - dev
      - master
      - main
  release:
    types:
      - created
jobs:
  build:
    environment: 
      name: ${{ inputs.environment }}

    env:
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      DOCKER_KEY: ${{ secrets.DOCKER_KEY }}
      DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
    # Job name that shows in the GitHub UI
    name: Build
    # Runner to use
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_KEY }}

      - name: Create a latest image
        run: docker build -t ${IMAGE_NAME} -f ./Dockerfile .

      - name: Create a latest image
        run: docker tag ${IMAGE_NAME} ${DOCKER_LOGIN}/${IMAGE_NAME}

      - name: Push the image
        run: docker push ${DOCKER_LOGIN}/${IMAGE_NAME}
  deploy:
    # Job name that shows in the GitHub UI
    name: Deploy
    # Runner to use
    runs-on: ubuntu-latest
    needs: build

    environment: 
      name: dev

    env:
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      PROD_ENV: ${{ secrets.PROD_ENV }}
      PROD_SSH: ${{ secrets.PROD_SSH }}
      PROD_IP: ${{ secrets.PROD_IP }}
      PROD_USER: ${{ secrets.PROD_USER }}
      DEPLOY_FOLDER: ${{ secrets.DEPLOY_FOLDER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Create env file
        run: 
          echo "${PROD_ENV}" > .env &&
          echo "IMAGE_NAME=${IMAGE_NAME}" >> .env

      - name: prepare ssh
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          eval $(ssh-agent -s)
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.PROD_SSH }}"
          ssh-keyscan $PROD_IP >> ~/.ssh/known_hosts && chmod 0600 ~/.ssh/known_hosts

          
      - name: prepare exec folder
        run: |
          ssh -t ${PROD_USER}@${PROD_IP} "mkdir -p ${DEPLOY_FOLDER}/"
      - name: prepare exec files
        run: |
          scp .env ${PROD_USER}@${PROD_IP}:${DEPLOY_FOLDER}/
          scp deployment/docker-compose.yml ${PROD_USER}@${PROD_IP}:${DEPLOY_FOLDER}/docker-compose.yml
          scp deployment/update.sh ${PROD_USER}@${PROD_IP}:${DEPLOY_FOLDER}/update.sh
      
      - name: run server
        run: ssh -t ${PROD_USER}@${PROD_IP} "cd ${DEPLOY_FOLDER}/ && ./update.sh"
